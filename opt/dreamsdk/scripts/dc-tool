#!/usr/bin/env bash

if [ -z "$toolchains_base" ]; then
  echo "fatal: \$toolchain_base is undefined!";
  exit;
fi

# Get dc-tool parameters
kind=$(awk -F "=" '/Kind/ {print $2}' ${dctool_conf})
executable=$(awk -F "=" '/Executable/ {print $2}' ${dctool_conf})
commandline=$(awk -F "=" '/CommandLine/ {print $2}' ${dctool_conf})
dreamcast_ip=$(awk -F "=" '/InternetProtocolAddress/ {print $2}' ${dctool_conf})
dreamcast_mac=$(awk -F "=" '/MediaAccessControlAddress/ {print $2}' ${dctool_conf})
use_arp=$(awk -F "=" '/MediaAccessControlEnabled/ {print $2}' ${dctool_conf})

dreamcast_tool_not_configured() {
  echo "Dreamcast Tool (dc-tool) is not configured."
  echo "Please run the DreamSDK Manager utility to set it up."
  echo "Enter dreamsdk-manager at the command prompt to do that."  
  exit 1
}

# check the executable presence and the good configuration
is_executable_exists=$(command -v $executable)
if [ "$kind" == "0" ] || [ -z "$is_executable_exists" ]; then
  dreamcast_tool_not_configured
fi

# Handle arp
if [ "$kind" == "2" ] && [ "$use_arp" == "1" ]; then  
  arp_cmd="arp -s ${dreamcast_ip} ${dreamcast_mac}"
  ping_ttl=$(ping ${dreamcast_ip} -n 1 | grep "TTL")
  if [ -z "$ping_ttl" ]; then
    is_uac_enabled=$(uac-status)
    if [ "$is_uac_enabled" == "1" ]; then    
      echo "Please confirm UAC to allow the ARP entry addition..."
      elevate -c -w ${arp_cmd}
    else
      ${arp_cmd}
    fi
  fi
fi

# run the loader!
${executable} ${commandline} $*
