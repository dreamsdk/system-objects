# /etc/profile.d/dreamsdk.sh: sourced by /etc/profile.

################################################################################
#    ___                     _______  __ __
#   / _ \_______ ___ ___ _  / __/ _ \/ //_/
#  / // / __/ -_) _ \`/  ' \_\ \/ // /  ,<
# /____/_/  \__/\_,_/_/_/_/___/____/_/|_|
#                                        
################################################################################

# Name of the environment
export ENVIRONMENT_NAME=DreamSDK

# Force GNU compilers messages in English language
# This avoid some encoding problems in the console
export LANG=en

################################################################################

# DreamSDK base directory
export dreamsdk_base=/opt/dreamsdk
export PATH="${PATH}:${dreamsdk_base}"

# Toolchains base directory
export toolchains_base=/opt/toolchains/dc

# DreamSDK configuration file
export dreamsdk_conf=/etc/dreamsdk/dreamsdk.conf

# Dreamcast Tool configuration file
export dctool_conf=/etc/dreamsdk/dc-tool.conf

################################################################################

# Updated command prompt (this overloads the default MinGW prompt)
export PS1='\[\033]0;${ENVIRONMENT_NAME}:\w\007
\033[32m\]\u@\h \[\033[33m\w\033[0m\]
$ '

################################################################################

# KallistiOS initialization script
export environ=$toolchains_base/kos/environ.sh

# KallistiOS utilities directory
export kos_utilities=$toolchains_base/kos/utils

# Add additional directories in the PATH
export PATH="${PATH}:${dreamsdk_base}/addons"
export PATH="${PATH}:${dreamsdk_base}/helpers"
export PATH="${PATH}:${dreamsdk_base}/scripts"

# Initialize KallistiOS
export kos_initialized=0
if [ -f "${environ}" ]; then
  source "${environ}"
  export kos_initialized=1	  
fi

# Add all additional KallistiOS utilities in PATH
if [ $kos_initialized -eq 1 ]; then
  for d in ${kos_utilities}/*/ ; do
    [ -L "${d%/}" ] && continue
    export PATH="${PATH}:$d"
  done
fi

# Change to the passed directory if needed...
if [ -n "$_WORKING_DIRECTORY" ]; then
  cd "$_WORKING_DIRECTORY"  
fi

# By default, MSYS is always switching to the home directory.
# We don't want this, as we will allow to open a shell in a specific folder and
# run some commands from there directly from the prompt.
if [ -z "$_EXTERNAL_COMMAND" ]; then
  # Default usage (as normal MSYS instance)
  if [ -z "$_WORKING_DIRECTORY" ]; then    
    cd "$HOME"
  fi
  
  # Display DreamSDK welcome banner
  dreamsdk-banner  
else
  # Command passed to the launcher
  ret_val=0;

  run() {
    local cmd

    cmd="$(mktemp)"
    echo -e "#!/usr/bin/env bash\n# Generated by ${ENVIRONMENT_NAME} on `date`\n\n$_EXTERNAL_COMMAND\n" > ${cmd}
    chmod +x ${cmd}
    ${cmd}
    ret_val=$?
    if [ -f "${cmd}" ]; then
      rm "${cmd}"
    fi
  }

  run
  
  if [ -n "$_EXITCODE" ]; then
    echo "${ret_val}" > "$_EXITCODE"
  fi

  logout
fi
